global:
  checkNewVersion: true
  sendAnonymousUsage: false

# API and Dashboard
api:
  dashboard: true # Enable the Traefik dashboard
  debug: false # Set to true for debugging
  insecure: false # Never expose dashboard without authentication

# Entry Points - Define ports and protocols
entryPoints:
  # HTTP Entry Point (Port 80)
  web:
    address: ":80"
    # http:
    # # Global HTTP -> HTTPS redirect
    # redirections:
    #   entryPoint:
    #     to: websecure
    #     scheme: https
    #     permanent: true
    # Trusted IPs for X-Forwarded headers (both Docker networks)
    # forwardedHeaders:
    #   trustedIPs:
    #     - "172.20.0.0/24" # homelab network
    #     - "172.21.0.0/24" # media network
    #     - "127.0.0.1/32" # localhost
    #     - "10.0.0.0/8" # private network
    #     - "192.168.0.0/16" # private network

  # HTTPS Entry Point (Port 443)
  websecure:
    address: ":443"
    http:
      tls:
        certResolver: letsencrypt
        domains:
          - main: "yourdomain.com"
            sans:
              - "*.yourdomain.com"
      # middlewares:
      #   - security-headers@file # Apply security headers globally
    # forwardedHeaders:
    #   trustedIPs:
    #     - "172.20.0.0/24" # homelab network (172.20.0.0/16)
    #     - "172.21.0.0/24" # media network (172.21.0.0/16)
    #     - "127.0.0.1/32" # localhost
    #     - "10.0.0.0/8" # private network
    #     - "192.168.0.0/16" # private network

  # Traefik Dashboard Entry Point (Internal only)
  traefik:
    address: ":8080"

# Certificate Resolvers - Let's Encrypt Configuration
certificatesResolvers:
  letsencrypt:
    acme:
      email: "your-email@example.com" # Change to your email
      storage: "/letsencrypt/acme.json"
      # Use HTTP-01 challenge (recommended for most homelab setups)
      httpChallenge:
        entryPoint: web
      # Uncomment for DNS challenge (if you use Cloudflare, Route53, etc.)
      # dnsChallenge:
      #   provider: cloudflare
      #   delayBeforeCheck: 30s
      #   resolvers:
      #     - "1.1.1.1:53"
      #     - "8.8.8.8:53"

# Ping - Healthcheck endpoint
ping:
  entryPoint: traefik

# Providers - Where Traefik gets its dynamic configuration
providers:
  # Docker provider - reads labels from Docker containers
  docker:
    endpoint: "unix:///var/run/docker.sock"
    exposedByDefault: false # Only expose containers with traefik.enable=true
    network: "homelab" # Default network to use
    watch: true # Watch for Docker events in real-time
    # Constraints to filter which containers Traefik should manage
    # constraints: "Label(`traefik.enable`,`true`)"

  # File provider - for dynamic configuration files
  # file:
  #   directory: "/etc/traefik/dynamic"
  #   watch: true # Automatically reload on file changes

# Logging Configuration
log:
  level: "INFO" # DEBUG, INFO, WARN, ERROR, FATAL, PANIC
  filePath: "/var/log/traefik/traefik.log"
  format: "common" # common or json
  # Enable for detailed logs
  # level: "DEBUG"

# Access Logs - HTTP request logs
accessLog:
  filePath: "/var/log/traefik/access.log"
  format: "common" # common or json
  bufferingSize: 100
  filters:
    statusCodes:
      - "400-599" # Only log errors (remove to log all requests)
    retryAttempts: true
    minDuration: "10ms"

# Metrics (Optional - Prometheus integration)
metrics:
  prometheus:
    addEntryPointsLabels: true
    addRoutersLabels: true
    addServicesLabels: true
    entryPoint: traefik
    # Uncomment to expose metrics on separate port
    # buckets:
    #   - 0.1
    #   - 0.3
    #   - 1.2
    #   - 5.0

# Pilot (Optional - Traefik Pilot integration)
# pilot:
#   token: "your-pilot-token"

# ServersTransport - Global transport configuration
serversTransport:
  insecureSkipVerify: true # Set to true for self-signed certificates and internal connections
  maxIdleConnsPerHost: 200
  forwardingTimeouts:
    dialTimeout: "30s"
    responseHeaderTimeout: "30s"
    idleConnTimeout: "90s"
# Experimental Features (Traefik v3)
# experimental:
# plugins: {}
# localPlugins: {}

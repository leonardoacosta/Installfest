networks:
  homelab:
    name: homelab
    driver: bridge
    enable_ipv6: false
    ipam:
      config:
        - subnet: 172.20.0.0/24
          gateway: 172.20.0.1
          ip_range: 172.20.0.128/25
    driver_opts:
      com.docker.network.bridge.name: br-homelab
  media:
    name: media
    driver: bridge
    enable_ipv6: false
    ipam:
      config:
        - subnet: 172.21.0.0/24
          gateway: 172.21.0.1
          ip_range: 172.21.0.128/25
    driver_opts:
      com.docker.network.bridge.name: br-media

services:
  # ***********************************
  # ********** Dashboard & Monitoring *
  # ***********************************
  # ? Glance - Self-Hosted Dashboard
  glance:
    image: glanceapp/glance:latest
    container_name: glance
    restart: unless-stopped
    environment:
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ./glance:/app/data
      - ./glance:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      # - outer:inner
      - "8085:8080"
    networks:
      homelab:
        ipv4_address: 172.20.0.85
      media:
        ipv4_address: 172.21.0.85
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080 || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 5
    security_opt:
      - no-new-privileges:true
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=homelab"
      - "traefik.http.routers.glance.rule=Host(`glance.${DOMAIN:-local}`)"
      - "traefik.http.routers.glance.entrypoints=websecure"
      - "traefik.http.routers.glance.tls=true"
      - "traefik.http.routers.glance.tls.certresolver=letsencrypt"
      - "traefik.http.services.glance.loadbalancer.server.port=8080"
      - "traefik.http.routers.glance.middlewares=homelab-general@file"
      - "com.centurylinklabs.watchtower.enable=true"
      - "homepage.group=Infrastructure"
      - "homepage.name=Glance"
      - "homepage.icon=glance"
      - "homepage.href=https://glance.${DOMAIN:-local}"
      - "homepage.description=Homelab Dashboard"

  # ************************************
  # ********** Core Infrastructure *****
  # ************************************

  # ? Home Assistant - Smart Home Hub
  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    container_name: homeassistant
    restart: unless-stopped
    privileged: false # Changed from true - use specific capabilities instead
    environment:
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ./homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      # Add device mapping if needed for USB devices
      # - /dev/ttyUSB0:/dev/ttyUSB0
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_ADMIN # Only if needed for specific hardware
    ports:
      - "8123:8123"
    networks:
      homelab:
        ipv4_address: 172.20.0.123
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    # devices:
    #   - /dev/ttyUSB0:/dev/ttyUSB0
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8123 || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 10
      start_period: 120s
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=homelab"
      - "traefik.http.routers.homeassistant.rule=Host(`homeassistant.${DOMAIN:-local}`) || Host(`ha.${DOMAIN:-local}`)"
      - "traefik.http.routers.homeassistant.entrypoints=websecure"
      - "traefik.http.routers.homeassistant.tls=true"
      - "traefik.http.routers.homeassistant.tls.certresolver=letsencrypt"
      - "traefik.http.services.homeassistant.loadbalancer.server.port=8123"
      - "traefik.http.routers.homeassistant.middlewares=homeassistant-headers@file"

  # ? AdGuard Home - DNS Ad Blocker
  adguardhome:
    image: adguard/adguardhome:latest
    container_name: adguardhome
    restart: unless-stopped
    environment:
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ./adguardhome/work:/opt/adguardhome/work
      - ./adguardhome/conf:/opt/adguardhome/conf
    ports:
      # Port 53 disabled - conflicts with systemd-resolved on runner
      # Use AdGuard via container IP (172.20.0.53) or custom DNS port
      # - "53:53/tcp"
      # - "53:53/udp"
      - "82:80/tcp" # Web interface (port 82 to avoid conflicts)
      - "8443:443/tcp" # HTTPS web interface
      - "3000:3000/tcp" # Initial setup
      - "853:853/tcp" # DNS-over-TLS
      - "784:784/udp" # DNS-over-QUIC
      - "853:853/udp"
      - "8853:8853/udp"
      - "5443:5443/tcp" # DNSCrypt
      - "5443:5443/udp"
    networks:
      homelab:
        ipv4_address: 172.20.0.53
    cap_add:
      - NET_BIND_SERVICE
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:80/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=homelab"
      - "traefik.http.routers.adguardhome.rule=Host(`adguard.${DOMAIN:-local}`) || Host(`dns.${DOMAIN:-local}`)"
      - "traefik.http.routers.adguardhome.entrypoints=websecure"
      - "traefik.http.routers.adguardhome.tls=true"
      - "traefik.http.routers.adguardhome.tls.certresolver=letsencrypt"
      - "traefik.http.services.adguardhome.loadbalancer.server.port=80"
      - "traefik.http.routers.adguardhome.middlewares=homelab-admin@file"

  # ? Traefik - Reverse Proxy
  traefik:
    image: traefik:v3.3
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Dashboard
    environment:
      - TZ=${TZ:-America/Chicago}
      - DOMAIN=${DOMAIN:-local}
      - TRAEFIK_DASHBOARD_USER=${TRAEFIK_DASHBOARD_USER}
      - TRAEFIK_DASHBOARD_PASSWORD=${TRAEFIK_DASHBOARD_PASSWORD}
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/dynamic:/dynamic:ro
      - ./traefik/letsencrypt:/letsencrypt
      - ./traefik/logs:/var/log/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      homelab:
        ipv4_address: 172.20.0.81
      media:
        ipv4_address: 172.21.0.81
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    security_opt:
      - no-new-privileges:true
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=homelab"
      # Dashboard Router
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.${DOMAIN:-local}`)"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.tls=true"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.middlewares=dashboard-auth@file"
      # Metadata
      - "com.centurylinklabs.watchtower.enable=true"
      - "homepage.group=Infrastructure"
      - "homepage.name=Traefik"
      - "homepage.icon=traefik"
      - "homepage.href=https://traefik.${DOMAIN:-local}"
      - "homepage.description=Reverse Proxy & Load Balancer"

  # ? Vaultwarden - Password Manager
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    environment:
      - TZ=${TZ:-America/Chicago}
      - DOMAIN=${VAULTWARDEN_DOMAIN:-https://vault.local}
      - ADMIN_TOKEN=${VAULTWARDEN_ADMIN_TOKEN}
      - SIGNUPS_ALLOWED=${VAULTWARDEN_SIGNUPS_ALLOWED:-false}
      - INVITATIONS_ALLOWED=${VAULTWARDEN_INVITATIONS_ALLOWED:-true}
      - WEBSOCKET_ENABLED=true
      - SENDS_ALLOWED=true
      - EMERGENCY_ACCESS_ALLOWED=true
      - WEB_VAULT_ENABLED=true
      - LOG_LEVEL=${VAULTWARDEN_LOG_LEVEL:-debug}
      - EXTENDED_LOGGING=true
      - SHOW_PASSWORD_HINT=false
      # DATABASE_URL not needed - defaults to /data/db.sqlite3
      # - DATABASE_URL=/data/db.sqlite3  # Uncomment only if you need a custom path
      - DATABASE_MAX_CONNS=10
      - IP_HEADER=X-Real-IP
      - ICON_CACHE_TTL=2592000
      - ICON_CACHE_NEGTTL=259200
    volumes:
      - ./vaultwarden/data:/data
    ports:
      - "8222:80"
      - "3012:3012"
    networks:
      homelab:
        ipv4_address: 172.20.0.22
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.entrypoints=websecure"
      - "traefik.http.routers.vaultwarden.tls=true"
      - "traefik.http.services.vaultwarden.loadbalancer.server.port=80"

  # ************************************
  # ********** AI & Knowledge **********
  # ************************************
  # ? Ollama - Local LLM Server
  ollama:
    image: docker.io/ollama/ollama:0.5.4
    container_name: ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ./ollama/data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=*
      - OLLAMA_NUM_PARALLEL=${OLLAMA_PARALLEL:-2}
      - OLLAMA_MAX_LOADED_MODELS=${OLLAMA_MAX_MODELS:-2}
      - OLLAMA_KEEP_ALIVE=${OLLAMA_KEEP_ALIVE:-5m}
    networks:
      homelab:
        ipv4_address: 172.20.0.11
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: "4.0"
          memory: 8G
        reservations:
          memory: 2G
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # ? Ollama WebUI - Interface for Ollama
  ollama-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: ollama-webui
    restart: unless-stopped
    ports:
      - "8081:8080" # Ollama WebUI
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY:-changeme}
      - WEBUI_AUTH=${WEBUI_AUTH:-true}
      - ENABLE_SIGNUP=${ENABLE_SIGNUP:-true}
    volumes:
      - ./ollama-webui/data:/app/backend/data
    depends_on:
      ollama:
        condition: service_healthy
        restart: true
    networks:
      homelab:
        ipv4_address: 172.20.0.12
    security_opt:
      - no-new-privileges:true
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:8081/health || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ollama-webui.entrypoints=websecure"
      - "traefik.http.routers.ollama-webui.tls=true"
      - "traefik.http.services.ollama-webui.loadbalancer.server.port=8081"

  # ************************************
  # ********** VPN & Security **********
  # ************************************
  # ? Tailscale - Mesh VPN
  tailscale:
    image: docker.io/tailscale/tailscale:stable
    container_name: tailscale
    restart: unless-stopped
    hostname: homelab-tailscale
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
      - TS_ROUTES=${TS_ROUTES:-172.20.0.0/16,172.21.0.0/16}
      - TS_EXTRA_ARGS=--advertise-exit-node --accept-dns=false
    volumes:
      - ./tailscale/state:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    network_mode: host
    # sysctls must be set at host level with network_mode: host
    labels:
      - "traefik.enable=false" # Cannot use Traefik with host networking

  # ************************************
  # ********** Storage Services ********
  # ************************************
  # ? Samba - Network Attached Storage
  samba:
    image: ghcr.io/servercontainers/samba:latest
    container_name: samba
    restart: unless-stopped
    environment:
      - TZ=${TZ:-America/Chicago}
      - USERID=${PUID:-1000}
      - GROUPID=${PGID:-1000}
      - SHARE1=${SAMBA_SHARE1:-Media;/media;yes;no;yes;all;none}
      - SHARE2=${SAMBA_SHARE2:-Backup;/backup;yes;no;no;all;none}
      - USER1=${SAMBA_USER:-user;SAMBA_PASSWORD}
      - SAMBA_USER=${SAMBA_USER}
      - SAMBA_PASSWORD=${SAMBA_PASSWORD}
      - RECYCLE=false
    volumes:
      - ${NAS_PATH:-/data}:/media
      # - ${BACKUP_PATH:-/backup}:/backup
    ports:
      - "445:445"
      - "139:139"
    networks:
      homelab:
        ipv4_address: 172.20.0.45
    # healthcheck:
    #   # Using samba's built-in healthcheck command
    #   test: ["CMD", "samba", "healthcheck", "--ping"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 20s
    cap_add:
      - SYS_ADMIN
      - DAC_READ_SEARCH
      - CAP_NET_ADMIN
    security_opt:
      - no-new-privileges:true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.samba.entrypoints=websecure"
      - "traefik.http.routers.samba.tls=true"
      - "traefik.http.services.samba.loadbalancer.server.port=445"

  # ************************************
  # ********** Media Stack Services ****
  # ************************************
  # ? Gluetun - VPN Client for Media Services
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    networks:
      media:
        ipv4_address: 172.21.0.2
    ports:
      # Gluetun built-in services
      - "8888:8888/tcp" # HTTP proxy
      - "8388:8388/tcp" # Shadowsocks
      - "8388:8388/udp" # Shadowsocks
      # Services running through VPN
      - "9696:9696" # Prowlarr Web UI
      - "8090:8080" # qBittorrent Web UI (mapped to 8090 to avoid conflicts)
      - "6789:6789" # NZBGet Web UI
    volumes:
      - ./gluetun:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=custom
      - VPN_TYPE=wireguard
      - VPN_ENDPOINT_IP=${VPN_ENDPOINT_IP}
      - VPN_ENDPOINT_PORT=${VPN_ENDPOINT_PORT:-51820}

      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESS=${WIREGUARD_ADDRESS}
      - WIREGUARD_PUBLIC_KEY=${WIREGUARD_PUBLIC_KEY}
      - WIREGUARD_ENDPOINT_PORT=${VPN_ENDPOINT_PORT}

      - FIREWALL_VPN_INPUT_PORTS=${FIREWALL_VPN_INPUT_PORTS}
      - FIREWALL_OUTBOUND_SUBNETS=172.21.0.0/16,172.20.0.0/16

      - HTTPPROXY=off
      - SHADOWSOCKS=off
      - DOT=off
      - BLOCK_MALICIOUS=on
      - BLOCK_SURVEILLANCE=off
      - BLOCK_ADS=off
      - UPDATER_PERIOD=24h
      - HTTP_CONTROL_SERVER_ADDRESS=:8000
      - HTTP_CONTROL_SERVER_LOG=on

      - TZ=${TZ:-America/Chicago}
      - no-new-privileges:true
    healthcheck:
      test: ping -c 1 www.google.com || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  # ? Jellyfin - Media Server
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - ${MEDIA_PATH:-/data/media}:/media:ro
      - ${MEDIA_PATH2:-/data/media2}:/media2:ro
    ports:
      - "8096:8096" # Web interface
      - "8920:8920" # HTTPS web interface
      - "7359:7359/udp" # Client discovery - Allows clients to discover Jellyfin on the local network
      - "1900:1900/udp" # DLNA - Service discovery used by DNLA and clients
    networks:
      homelab:
        ipv4_address: 172.20.0.96
      media:
        ipv4_address: 172.21.0.96
    # devices:
    #   - /dev/dri:/dev/dri  # Intel QuickSync / GPU transcoding
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8096/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    security_opt:
      - no-new-privileges:true
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=homelab"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.${DOMAIN:-local}`) || Host(`media.${DOMAIN:-local}`)"
      - "traefik.http.routers.jellyfin.entrypoints=websecure"
      - "traefik.http.routers.jellyfin.tls=true"
      - "traefik.http.routers.jellyfin.tls.certresolver=letsencrypt"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
      - "traefik.http.routers.jellyfin.middlewares=media-services@file"

  # ? Radarr - Movie Manager
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ./radarr:/config
      - ${MEDIA_PATH:-/data/media}:/media
      - ${DOWNLOADS_PATH:-/data/downloads}:/downloads
    ports:
      - "7878:7878"
    networks:
      media:
        ipv4_address: 172.21.0.78
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:7878/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=media"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN:-local}`) || Host(`movies.${DOMAIN:-local}`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.routers.radarr.tls.certresolver=letsencrypt"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.radarr.middlewares=media-services@file"

  # ? Sonarr - TV Show Manager
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ./sonarr:/config
      - ${MEDIA_PATH:-/data/media}:/media
      - ${DOWNLOADS_PATH:-/data/downloads}:/downloads
    ports:
      - "8989:8989"
    networks:
      media:
        ipv4_address: 172.21.0.89
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8989/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=media"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN:-local}`) || Host(`tv.${DOMAIN:-local}`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.tls.certresolver=letsencrypt"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "traefik.http.routers.sonarr.middlewares=media-services@file"

  # ? Lidarr - Music Manager
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ./lidarr:/config
      - ${MEDIA_PATH:-/data/media}:/media
      - ${DOWNLOADS_PATH:-/data/downloads}:/downloads
    ports:
      - "8686:8686"
    networks:
      media:
        ipv4_address: 172.21.0.86
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8686/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=media"
      - "traefik.http.routers.lidarr.rule=Host(`lidarr.${DOMAIN:-local}`) || Host(`music.${DOMAIN:-local}`)"
      - "traefik.http.routers.lidarr.entrypoints=websecure"
      - "traefik.http.routers.lidarr.tls=true"
      - "traefik.http.routers.lidarr.tls.certresolver=letsencrypt"
      - "traefik.http.services.lidarr.loadbalancer.server.port=8686"
      - "traefik.http.routers.lidarr.middlewares=media-services@file"

  # ? Bazarr - Subtitle Manager
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ./bazarr:/config
      - ${MEDIA_PATH:-/data/media}:/media
    ports:
      - "6767:6767"
    networks:
      media:
        ipv4_address: 172.21.0.67
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6767/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=media"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.${DOMAIN:-local}`) || Host(`subtitles.${DOMAIN:-local}`)"
      - "traefik.http.routers.bazarr.entrypoints=websecure"
      - "traefik.http.routers.bazarr.tls=true"
      - "traefik.http.routers.bazarr.tls.certresolver=letsencrypt"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
      - "traefik.http.routers.bazarr.middlewares=media-services@file"

  # ? Jellyseerr - Media Request Management
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    restart: unless-stopped
    environment:
      - TZ=${TZ:-America/Chicago}
      - LOG_LEVEL=${JELLYSEERR_LOG_LEVEL:-info}
    volumes:
      - ./jellyseerr:/app/config
    ports:
      - "5055:5055"
    networks:
      homelab:
        ipv4_address: 172.20.0.55
      media:
        ipv4_address: 172.21.0.55
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -q --spider http://localhost:5055/api/v1/status || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=homelab"
      - "traefik.http.routers.jellyseerr.rule=Host(`jellyseerr.${DOMAIN:-local}`) || Host(`request.${DOMAIN:-local}`)"
      - "traefik.http.routers.jellyseerr.entrypoints=websecure"
      - "traefik.http.routers.jellyseerr.tls=true"
      - "traefik.http.routers.jellyseerr.tls.certresolver=letsencrypt"
      - "traefik.http.services.jellyseerr.loadbalancer.server.port=5055"
      - "traefik.http.routers.jellyseerr.middlewares=homelab-public@file"

  # ? Prowlarr - Indexer Manager (Behind VPN)
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ./prowlarr:/config
    depends_on:
      gluetun:
        condition: service_healthy
    network_mode: service:gluetun
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9696/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      # Labels won't work with network_mode: service:gluetun
      # Routes are configured in traefik/dynamic/gluetun-routers.yml
      - "traefik.enable=false"

  # ? qBittorrent - Torrent Client (Behind VPN)
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Chicago}
      - WEBUI_PORT=8080
      - TORRENTING_PORT=${FIREWALL_VPN_INPUT_PORTS:-51820}
    volumes:
      - ./qbittorrent:/config
      - ${DOWNLOADS_PATH:-/data/downloads}:/downloads
    depends_on:
      gluetun:
        condition: service_healthy
        restart: true
    network_mode: service:gluetun
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      # Labels won't work with network_mode: service:gluetun
      # Routes are configured in traefik/dynamic/gluetun-routers.yml
      - "traefik.enable=false"

  # ? NZBGet - Usenet Client (Behind VPN)
  nzbget:
    image: lscr.io/linuxserver/nzbget:latest
    container_name: nzbget
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ./nzbget:/config
      - ${DOWNLOADS_PATH:-/data/downloads}:/downloads
    depends_on:
      gluetun:
        condition: service_healthy
    network_mode: service:gluetun
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6789 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      # Labels won't work with network_mode: service:gluetun
      # Routes are configured in traefik/dynamic/gluetun-routers.yml
      - "traefik.enable=false"

# Media Stack Services
# Includes streaming, content management, and download services

services:
  # ? Jellyfin - Media Server
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ../jellyfin/config:/config
      - ../jellyfin/cache:/cache
      - ${MEDIA_PATH:-/data/media}:/media:ro
      - ${MEDIA_PATH2:-/data/media2}:/media2:ro
    ports:
      - "8096:8096" # Web interface
      - "8920:8920" # HTTPS web interface
      - "7359:7359/udp" # Client discovery
      - "1900:1900/udp" # DLNA
    networks:
      homelab:
        ipv4_address: 172.20.0.96
      media:
        ipv4_address: 172.21.0.96
    # devices:
    #   - /dev/dri:/dev/dri  # Intel QuickSync / GPU transcoding
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8096/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    security_opt:
      - no-new-privileges:true
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=homelab"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.local`) || Host(`media.local`)"
      - "traefik.http.routers.jellyfin.entrypoints=websecure"
      - "traefik.http.routers.jellyfin.tls=true"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
      # - "traefik.http.routers.jellyfin.middlewares=media-services@file"

  # ? Radarr - Movie Manager
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ../radarr:/config
      - ${MEDIA_PATH:-/data/media}:/media
      - ${DOWNLOADS_PATH:-/data/downloads}:/downloads
    ports:
      - "7878:7878"
    networks:
      media:
        ipv4_address: 172.21.0.78
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:7878/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=media"
      - "traefik.http.routers.radarr.rule=Host(`radarr.local`) || Host(`movies.local`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      # - "traefik.http.routers.radarr.middlewares=media-services@file"

  # ? Sonarr - TV Show Manager
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ../sonarr:/config
      - ${MEDIA_PATH:-/data/media}:/media
      - ${DOWNLOADS_PATH:-/data/downloads}:/downloads
    ports:
      - "8989:8989"
    networks:
      media:
        ipv4_address: 172.21.0.89
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8989/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=media"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.local`) || Host(`tv.local`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      # - "traefik.http.routers.sonarr.middlewares=media-services@file"

  # ? Lidarr - Music Manager
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ../lidarr:/config
      - ${MEDIA_PATH:-/data/media}:/media
      - ${DOWNLOADS_PATH:-/data/downloads}:/downloads
    ports:
      - "8686:8686"
    networks:
      media:
        ipv4_address: 172.21.0.86
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8686/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=media"
      - "traefik.http.routers.lidarr.rule=Host(`lidarr.local`) || Host(`music.local`)"
      - "traefik.http.routers.lidarr.entrypoints=websecure"
      - "traefik.http.routers.lidarr.tls=true"
      - "traefik.http.services.lidarr.loadbalancer.server.port=8686"
      # - "traefik.http.routers.lidarr.middlewares=media-services@file"

  # ? Bazarr - Subtitle Manager
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ../bazarr:/config
      - ${MEDIA_PATH:-/data/media}:/media
    ports:
      - "6767:6767"
    networks:
      media:
        ipv4_address: 172.21.0.67
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6767/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=media"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.local`) || Host(`subtitles.local`)"
      - "traefik.http.routers.bazarr.entrypoints=websecure"
      - "traefik.http.routers.bazarr.tls=true"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
      # - "traefik.http.routers.bazarr.middlewares=media-services@file"

  # ? Jellyseerr - Media Request Management
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    restart: unless-stopped
    environment:
      - TZ=${TZ:-America/Chicago}
      - LOG_LEVEL=${JELLYSEERR_LOG_LEVEL:-info}
    volumes:
      - ../jellyseerr:/app/config
    ports:
      - "5055:5055"
    networks:
      homelab:
        ipv4_address: 172.20.0.55
      media:
        ipv4_address: 172.21.0.55
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -q --spider http://localhost:5055/api/v1/status || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=homelab"
      - "traefik.http.routers.jellyseerr.rule=Host(`jellyseerr.local`) || Host(`request.local`)"
      - "traefik.http.routers.jellyseerr.entrypoints=websecure"
      - "traefik.http.routers.jellyseerr.tls=true"
      - "traefik.http.services.jellyseerr.loadbalancer.server.port=5055"
      # - "traefik.http.routers.jellyseerr.middlewares=homelab-public@file"

  # ? Prowlarr - Indexer Manager (Behind VPN)
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ../prowlarr:/config
    depends_on:
      gluetun:
        condition: service_healthy
    network_mode: service:gluetun
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9696/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      # Labels won't work with network_mode: service:gluetun
      # Routes are configured in traefik/dynamic/gluetun-routers.yml
      - "traefik.enable=false"

  # ? qBittorrent - Torrent Client (Behind VPN)
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Chicago}
      - WEBUI_PORT=8080
      - TORRENTING_PORT=${FIREWALL_VPN_INPUT_PORTS:-51820}
    volumes:
      - ../qbittorrent:/config
      - ${DOWNLOADS_PATH:-/data/downloads}:/downloads
    depends_on:
      gluetun:
        condition: service_healthy
        restart: true
    network_mode: service:gluetun
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      # Labels won't work with network_mode: service:gluetun
      # Routes are configured in traefik/dynamic/gluetun-routers.yml
      - "traefik.enable=false"

  # ? NZBGet - Usenet Client (Behind VPN)
  nzbget:
    image: lscr.io/linuxserver/nzbget:latest
    container_name: nzbget
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ../nzbget:/config
      - ${DOWNLOADS_PATH:-/data/downloads}:/downloads
    depends_on:
      gluetun:
        condition: service_healthy
    network_mode: service:gluetun
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6789 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      # Labels won't work with network_mode: service:gluetun
      # Routes are configured in traefik/dynamic/gluetun-routers.yml
      - "traefik.enable=false"
